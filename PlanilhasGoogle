package br.ufpb.gdata.educservice;

import com.google.gdata.client.docs.DocsService;
import com.google.gdata.client.spreadsheet.SpreadsheetService;
import com.google.gdata.data.*;
import com.google.gdata.data.spreadsheet.ListEntry;
import com.google.gdata.data.spreadsheet.ListFeed;
import com.google.gdata.data.spreadsheet.SpreadsheetEntry;
import com.google.gdata.data.spreadsheet.SpreadsheetFeed;
import com.google.gdata.data.spreadsheet.WorksheetEntry;

import java.net.*;
import java.util.List;


public class PlanilhasGoogle {

	// Váriáveis referentes ao login e senha do usuário que possui conta no gmail
	String USERNAME = "USERNAME";
    String PASSWORD = "PASSWORD";
	
    /**
     * Método cria uma planilha no Google Drive do usuário ao qual se atribui a conta.
     * @param idExercicio
     */
    public void criarPlanilha(String idExercicio){
	   
    	try{ 

    		// Cria um novo documento no Docs
	     	DocsService service = new DocsService("MyDocumentsListIntegration-v1");
	     	
	     	// Seleciona o tipo de protocolo para este documento
			service.setProtocolVersion(DocsService.Versions.V3);
			
			// Informa as credenciais do usuário 
			service.setUserCredentials(USERNAME, PASSWORD);
			
			// Cria uma URL para o documento segundo o padrão passado por parâmetro 
			URL SPREADSHEET_FEED_URL = new URL("https://docs.google.com/feeds/default/private/full/");
			
			// Atribui o ID do exercício à variável titulo
			String titulo = idExercicio;
			
			// Instancia uma nova planilha
			com.google.gdata.data.docs.SpreadsheetEntry novaPlanilha = new com.google.gdata.data.docs.SpreadsheetEntry();
			
			// Seleciona o título dessa nova planilha
			novaPlanilha.setTitle(new PlainTextConstruct(titulo));
			
			// Atribui ou vincula a URL à planilha criada
			service.insert(SPREADSHEET_FEED_URL, novaPlanilha);
			
		} catch (Exception e){
			e.printStackTrace();
		}
    }
    
    public String buscaLinkPeloTitulo(String titulo){
    	
    	try{
    		// Autoriza o serviço para um usuário específico
    		SpreadsheetService service = new SpreadsheetService("MySpreadsheetIntegration-v1");

    		// Passa as credenciais do usuário
    	    service.setUserCredentials(USERNAME, PASSWORD);
    		
    	    // Define a URL de requisição (esse padrão nunca muda)
    	    URL SPREADSHEET_FEED_URL = new URL("https://spreadsheets.google.com/feeds/spreadsheets/private/full");

    	    // Faz uma requisição à API e obtém todas as planilhas do usuário
    	    SpreadsheetFeed feed = service.getFeed(SPREADSHEET_FEED_URL, SpreadsheetFeed.class);
    	    
    	    // Armazena o feed de todas as planilhas criadas pelo usuário
    	    List<SpreadsheetEntry> spreadsheets = feed.getEntries();

    	    // Caso não exista planilhas deve-se ser tratado neste ponto
    	    if (spreadsheets.size() == 0) {
    	      
    	    }

    	    // Varre a lista de planilhas do usuário em busca da planilha com o titulo passado como parâmetro
    	    // Ainda falta tratar caso haja titulos iguais
    	    for(SpreadsheetEntry spreadsheet: spreadsheets){
    	    	if(spreadsheet.getTitle().getPlainText().equals(titulo)){
    	    		return spreadsheet.getSpreadsheetLink().getHref();
    	    	}    	    	
    	    }
    	    
    	} catch(Exception e){
    		e.printStackTrace();
    	}
    	
    	 return "Não há planilhas!";
    }
    
    // Este método falta ser consertado
    public void addConteudoEmCelula(String tituloPlanilha, String tituloQuestao){
    	try{
    		
    		SpreadsheetService service = new SpreadsheetService("MySpreadsheetIntegration-v1");
    		
    		service.setUserCredentials(USERNAME, PASSWORD);
    		
    		SpreadsheetEntry spreadsheet = this.buscaPlanilhaPeloTitulo(tituloPlanilha);
    		
    		WorksheetEntry worksheet = spreadsheet.getDefaultWorksheet();
    		
    		// Fetch the list feed of the worksheet.
    	    URL listFeedUrl = worksheet.getListFeedUrl();
    	    ListFeed listFeed = service.getFeed(listFeedUrl, ListFeed.class);

    	    
    	    // Iterate through each row, printing its cell values.
    	    for (ListEntry row : listFeed.getEntries()) {
    	    	    	    	
    	    	// Iterate over the remaining columns, and print each cell value
    	    	for (String tag : row.getCustomElements().getTags()) {
    	    		
    	    		if(tag.isEmpty()){
        	    		row.setContent(new PlainTextConstruct(tituloQuestao));
        	    	}
    	    		
    	    		//System.out.print(row.getCustomElements().getValue(tag) + "\t");
    	    	}
    	    }
    	        		
    	} catch(Exception e){
    		e.printStackTrace();
    	}
    	
    }
    
    
    public SpreadsheetEntry buscaPlanilhaPeloTitulo(String titulo){
    	
    	try{
    		// Autoriza o serviço para um usuário específico
    		SpreadsheetService service = new SpreadsheetService("MySpreadsheetIntegration-v1");

    		// Passa as credenciais do usuário
    	    service.setUserCredentials(USERNAME, PASSWORD);
    		
    	    // Define a URL de requisição (esse padrão nunca muda)
    	    URL SPREADSHEET_FEED_URL = new URL("https://spreadsheets.google.com/feeds/spreadsheets/private/full");

    	    // Faz uma requisição à API e obtém todas as planilhas do usuário
    	    SpreadsheetFeed feed = service.getFeed(SPREADSHEET_FEED_URL, SpreadsheetFeed.class);
    	    
    	    // Armazena o feed de todas as planilhas criadas pelo usuário
    	    List<SpreadsheetEntry> spreadsheets = feed.getEntries();

    	    // Caso não exista planilhas deve-se ser tratado neste ponto
    	    if (spreadsheets.size() == 0) {
    	      
    	    }

    	    // Varre a lista de planilhas do usuário em busca da planilha com o titulo passado como parâmetro
    	    // Ainda falta tratar caso haja titulos iguais
    	    for(SpreadsheetEntry spreadsheet: spreadsheets){
    	    	if(spreadsheet.getTitle().getPlainText().equals(titulo)){
    	    		return spreadsheet;
    	    	}    	    	
    	    }
    	    
    	} catch(Exception e){
    		e.printStackTrace();
    	}
    	
    	 return null;
    }
    

}
